@using Microsoft.JSInterop
@using Blazorade.Mermaid.Components
@inject IJSRuntime JsRuntime

@if (!string.IsNullOrEmpty(Content))
{
    <div id="@ElementId" style="display:none;">
        @ChildContent
    </div>

    <MermaidDiagram Definition="@Content" />
}
else
{
    <div id="@ElementId">
        @ChildContent
    </div>
}

@code {
    private string ElementId { get; } = $"mermaid-{Guid.NewGuid()}";

    [Parameter]
    public RenderFragment ChildContent { get; set; } = default!;

    private string Content { get; set; } = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Content = await JsRuntime.InvokeAsync<string>("eval", $"document.getElementById('{ElementId}').textContent");
            StateHasChanged(); // Call this to signal Blazor to re-check the render state
        }
    }
}